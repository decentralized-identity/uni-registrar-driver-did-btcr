# --- Driver ---
## Interval for confirmation check (seconds)
## If <0, confirmations will be checked only when there is a state request
## Note: This is temporary, and will be replaced with Listeners + Callbacks
regtest.conf.check.interval=10
testnet.conf.check.interval=250
mainnet.conf.check.interval=0
# --- BTCR ---
btcr.method.prefix=did:btcr:
## TX Identifier Prefixes
btcr.testnet.prefix=
btcr.mainnet.prefix=
btcr.regtest.prefix=
## When true, it will replace the continuation document with a new one, but will keep the file name same
btcr.did.doc.continuation.overWriteDidDocs=true
## Required tx depth to consider transactions immutable
btcr.required.tx.depth=5
## Target funding amount when driver's wallet funds operations (satoshis). This will be also the target amount when UTXO Producer is active.
btcr.target.fund.amount=100000
# --- Chain ---
## Chains to activate/support
chain.mainnet=false
chain.testnet=true
chain.regtest=false
# --- Base Paths ---
## DID Continuation documents will be stored in base.path, and they will have the base.uri as protocol
base.path=/var/www/html/btcr-continuation/
base.uri=http://localhost/
# --- Wallet ---
## Target UTXO upkeep: Since UTXOs cannot be divided, driver obtains smaller UTXOs via creating and broadcasting transactions to its own wallet
wallet.utxo.upkeep.regtest=50
wallet.utxo.upkeep.testnet=20
wallet.utxo.upkeep.mainnet=1
# Activation of the utxo producing
wallet.produce.utxo.mainnet=false
wallet.produce.utxo.testnet=true
wallet.produce.utxo.regtest=true
## Private Keys for the Wallet. If server-side funding wants to be supported, UTXO Producing will rely on the coins belongs to the given key
## Keys must be in WiF format, and must belong to an BECH32 address format due to BitcoinJ setup
wallet.regtest.key=
wallet.testnet.key=cVK98CANW13aXoFU6xiSZjqqEPWAF7pgteqzV4J4v9NaRFXosoZE
wallet.mainnet.key=
# Wallet Paths
wallet.path.regtest=/opt/wallets
wallet.path.testnet=/opt/wallets
wallet.path.mainnet=/opt/wallets
# Wallet Prefixes
wallet.prefix.regtest=regtest
wallet.prefix.testnet=testnet
wallet.prefix.mainnet=mainnet
# --- Connection ---
# Another way to pass rpc connection end points: URL
conn.rpc.url.mainnet=
conn.rpc.url.testnet=http://user:pass@127.0.0.1:18332/
conn.rpc.url.regtest=
conn.testnet.peer.001=127.0.0.1:18444
conn.testnet.peer.002=35.95.22.25:18333
## Deactivation following flag: When false, deactivation state will be considered as finished as soon as deactivation transaction is broadcast
## When true, driver will check for the confirmation until required block depth is met, then will return the finished state.
driver.follow.deactivation=true
## Bitcoin Client: BTCD, Bitcoind, Bitcoinj
bitcoin.client=BTCD